name: CI
on: [push]

jobs:
  run_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13.3'

      - name: Cache go modules
        uses: actions/cache@v1
        with:
          path: $(go env GOPATH)/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go modules
        run: go mod download -json

      - name: Build for linux
        run: GOOS=linux GOARCH=amd64 go build -o wavelet-linux-amd64 ./cmd/wavelet

      - name: Build for 32 bit arm
        run: GOOS=linux GOARCH=arm go build -o wavelet-linux-arm ./cmd/wavelet

      - name: Install golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.20.1

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run -c .golangci.yml

      - name: Run unit tests
        run: make unit_test

      - name: Run integration tests
        run: make integration_test

      - name: Concat coverage
        run: |
                echo "mode: atomic" > coverage.txt
                grep -h -v "mode: atomic" coverage_*.txt >> coverage.txt

      - name: Upload coverage report
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: coverage.txt
