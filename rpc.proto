// Copyright (c) 2019 Perlin
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";

package wavelet;

message QueryRequest {
    uint64 round_index = 1;
}

message QueryResponse {
    bytes round = 1;
}

message OutOfSyncRequest {
    uint64 round_index = 1;
}

message OutOfSyncResponse {
    bool out_of_sync = 1;
}

message SyncInfo {
    bytes latest_round = 1;
    repeated bytes checksums = 2;
}

message SyncRequest {
    oneof Data {
        uint64 round_id = 1;
        bytes checksum = 2;
    }
}

message SyncResponse {
    oneof Data {
        SyncInfo header = 1;
        bytes chunk = 2;
    }
}

message DownloadTxRequest {
    repeated bytes skip_ids = 1;
    uint64 depth = 2;
}

message DownloadMissingTxRequest {
    repeated bytes ids = 1;
}

message DownloadTxResponse {
    repeated bytes transactions = 1;
}

message Transactions {
    repeated bytes transactions = 1;
}

message Empty {
}

service Wavelet {
    rpc Query (QueryRequest) returns (QueryResponse) {}

    rpc CheckOutOfSync (OutOfSyncRequest) returns (OutOfSyncResponse) {}
    rpc Sync (stream SyncRequest) returns (stream SyncResponse) {}

    rpc DownloadTx (DownloadTxRequest) returns (DownloadTxResponse) {}
    rpc DownloadMissingTx (DownloadMissingTxRequest) returns (DownloadTxResponse) {}
}
